<?xml version="1.0" encoding="ISO-8859-1"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns="AMNExpression" xmlns:_1="AMNPredicate" xmlns:_2="AMNSubstitution" xmlns:amn="http://amn/1.0">
  <amn:AbstractMachine name="ContextAgency" sets="/1 /2" properties="/5" abstractConstants="/3 /4 /13 /14 /24 /25"/>
  <amn:Deferred name="AVAL"/>
  <amn:Deferred name="OID"/>
  <NamedConstant name="Obj"/>
  <NamedConstant name="self"/>
  <_1:Conjunction predicate="/6 /8 /10 /15 /26 /109"/>
  <_1:AtomicPredicate expression="/3 /7" sign=":"/>
  <FunctionalExpression expression="/1" sign="POW"/>
  <_1:AtomicPredicate expression="/4 /9" sign=":"/>
  <BinaryOperator sign=">->>" expression="/3 /2"/>
  <_1:AtomicPredicate expression="/11 /12" sign="="/>
  <BinaryOperator sign="/\" expression="/13 /14 /24 /25"/>
  <SetValue/>
  <NamedConstant name="extp_Specialist"/>
  <NamedConstant name="ext_Specialist"/>
  <_1:Conjunction predicate="/16 /18 /20"/>
  <_1:AtomicPredicate expression="/14 /17" sign=":"/>
  <FunctionalExpression expression="/3" sign="POW"/>
  <_1:AtomicPredicate expression="/13 /19" sign=":"/>
  <FunctionalExpression expression="/3" sign="POW"/>
  <_1:AtomicPredicate expression="/13 /14" sign="&lt;:"/>
  <amn:AbstractMachine name="Specialist" sees="/0" extendsClause="/32" invariant="/22" initialization="/23" operations="/53" abstractVariables="/51 /80"/>
  <_1:Conjunction predicate="/52 /81 /111"/>
  <_2:Simultaneous substitution="/59"/>
  <NamedConstant name="extp_Dispatcher"/>
  <NamedConstant name="ext_Dispatcher"/>
  <_1:Conjunction predicate="/27 /29 /31"/>
  <_1:AtomicPredicate expression="/25 /28" sign=":"/>
  <FunctionalExpression expression="/3" sign="POW"/>
  <_1:AtomicPredicate expression="/24 /30" sign=":"/>
  <FunctionalExpression expression="/3" sign="POW"/>
  <_1:AtomicPredicate expression="/24 /25" sign="&lt;:"/>
  <amn:AbstractMachine name="Dispatcher" sees="/0 /21" invariant="/33" initialization="/34" operations="/39 /67 /83" abstractVariables="/37 /65 /77"/>
  <_1:Conjunction predicate="/38 /66 /78"/>
  <_2:Simultaneous substitution="/45 /73"/>
  <BinaryOperator sign="-->" expression="/25 /110"/>
  <Variable name="sav"/>
  <Variable name="experts"/>
  <_1:AtomicPredicate expression="/37 /35" sign=":"/>
  <amn:Operation name="set_experts" substitution="/40" inputParams="/36"/>
  <_2:Precondition pre="/41" thenPart="/43"/>
  <_1:AtomicPredicate expression="/36 /42" sign=":"/>
  <BinaryOperator sign="+->" expression="/25 /110"/>
  <_2:BecomesEqual leftExpression="/37" rightExpression="/44"/>
  <BinaryOperator sign="&lt;+" expression="/37 /36"/>
  <_2:Any any="/46" where="/47" thenPart="/48"/>
  <Variable name="aexperts"/>
  <_1:AtomicPredicate expression="/46 /35" sign=":"/>
  <_2:BecomesEqual leftExpression="/37" rightExpression="/46"/>
  <BinaryOperator sign="-->" expression="/14"/>
  <Variable name="sav"/>
  <Variable name="experts_got"/>
  <_1:AtomicPredicate expression="/51 /49" sign=":"/>
  <amn:Operation name="set_experts_got" substitution="/54" inputParams="/50"/>
  <_2:Precondition pre="/55" thenPart="/57"/>
  <_1:AtomicPredicate expression="/50 /56" sign=":"/>
  <BinaryOperator sign="+->" expression="/14"/>
  <_2:BecomesEqual leftExpression="/51" rightExpression="/58"/>
  <BinaryOperator sign="&lt;+" expression="/51 /50"/>
  <_2:Any any="/60" where="/61" thenPart="/62"/>
  <Variable name="aexperts_got"/>
  <_1:AtomicPredicate expression="/60 /49" sign=":"/>
  <_2:BecomesEqual leftExpression="/51" rightExpression="/60"/>
  <BinaryOperator sign="-->" expression="/25"/>
  <Variable name="sav"/>
  <Variable name="get_experts"/>
  <_1:AtomicPredicate expression="/65 /63" sign=":"/>
  <amn:Operation name="set_get_experts" substitution="/68" inputParams="/64"/>
  <_2:Precondition pre="/69" thenPart="/71"/>
  <_1:AtomicPredicate expression="/64 /70" sign=":"/>
  <BinaryOperator sign="+->" expression="/25"/>
  <_2:BecomesEqual leftExpression="/65" rightExpression="/72"/>
  <BinaryOperator sign="&lt;+" expression="/65 /64"/>
  <_2:Any any="/74" where="/75" thenPart="/76"/>
  <Variable name="aget_experts"/>
  <_1:AtomicPredicate expression="/74 /63" sign=":"/>
  <_2:BecomesEqual leftExpression="/65" rightExpression="/74"/>
  <Variable name="dispatcher"/>
  <_1:AtomicPredicate expression="/77 /79" sign=":"/>
  <FunctionalExpression expression="/25" sign="POW"/>
  <Variable name="specialist"/>
  <_1:AtomicPredicate expression="/80 /82" sign=":"/>
  <FunctionalExpression expression="/14" sign="POW"/>
  <amn:Operation name="OPERATION check_experts" substitution="/85" inputParams="/84" outputParams="/112"/>
  <Variable name="av"/>
  <_2:Precondition pre="/86" thenPart="/88"/>
  <_1:Conjunction predicate="/87 /113"/>
  <_1:AtomicPredicate expression="/25 /84" sign=":"/>
  <_2:Any any="/114 /100" where="/89" thenPart="/90"/>
  <_1:Conjunction predicate="/93 /115 /101"/>
  <_2:SequenceSubst substitution="/102"/>
  <amn:Enum name="Boolean"/>
  <Variable/>
  <_1:Negation predicate="/108"/>
  <FunctionalExpression expression="/95 /96" sign="GetFunction"/>
  <Variable name="experts"/>
  <FunctionalExpression expression="/97 /98" sign="GetFunction"/>
  <Variable name="revi"/>
  <FunctionalExpression expression="/99" sign="GetFunction"/>
  <Variable name="getFunc"/>
  <Variable name="v1"/>
  <_1:AtomicPredicate expression="/100 /25" sign=":"/>
  <_2:BecomesEqual leftExpression="/103" rightExpression="/100"/>
  <FunctionalExpression expression="/104 /94" sign="SetFunction"/>
  <Variable name="experts"/>
  <Variable name="o"/>
  <_2:Call actualParam="/107" operationName="set_experts"/>
  <BinaryOperator sign="|->" expression="/103 /100"/>
  <BinaryOperator sign="=" expression="/100 /94"/>
  <_1:AtomicPredicate expression="/14 /25" sign="&lt;&lt;:"/>
  <FunctionalExpression expression="/14" sign="POW"/>
  <_1:AtomicPredicate expression="/80 /77" sign="&lt;:"/>
  <Variable name="revi"/>
  <_1:AtomicPredicate expression="/112 /14" sign=":"/>
  <Variable name="v0"/>
  <_1:AtomicPredicate expression="/114 /14" sign=":"/>
</xmi:XMI>
